{"version":3,"sources":["components/MainNavigation.js","components/AppNavbar.js","components/Footer.js","components/postsData.js","components/Posts.js","components/Post.js","App.js","serviceWorker.js","index.js"],"names":["userStyles","makeStyles","listItem","display","width","textAlign","color","listItems","text","id","url","MainNavigation","classes","List","component","map","item","key","to","ListItem","className","ListItemText","Typography","useStyles","theme","root","flexGrow","padding","backgroundImage","list","background","title","AppNavbar","AppBar","Toolbar","variant","form","flexDirection","alignItems","justifyContent","input","marginBottom","footer","Footer","Grid","container","xs","ListItemAvatar","Avatar","primary","secondary","FormControl","TextField","fullWidth","label","type","RadioGroup","aria-label","name","FormControlLabel","value","control","Radio","FormLabel","Button","posts","image","gridContainer","gridItem","borderRadius","cardMedia","height","withRouter","match","spacing","post","Card","CardMedia","alt","CardContent","substring","CardActions","Post","data","find","params","src","App","basename","path","exact","Posts","render","props","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f172d80.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\n\nconst userStyles = makeStyles({\n    listItem: {\n        display: \"inline-block\",\n        width:150,\n        textAlign: \"right\",\n        color: \"white\"\n    }\n});\n\nconst listItems = [\n    {\n        text: \"Posts\",\n        id: 1,\n        url: \"/posts\"\n    },\n    {\n        text: \"Prices\",\n        id: 2,\n        url: \"/prices\"\n    },\n    {\n        text: \"Contact\",\n        id: 3,\n        url: \"/contact\"\n    }\n]\n\nconst MainNavigation = () => {\n    const classes = userStyles();\n    return (\n        <List component=\"nav\">\n            {listItems.map((item) => {\n                return(\n                    <Link key={item.id} to={item.url}><ListItem className={classes.listItem}>\n                        <ListItemText>\n                            <Typography>{item.text}</Typography>\n                        </ListItemText>\n                    </ListItem></Link>\n                )\n            })}\n        </List>\n    )\n};\n\nexport default MainNavigation;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Toolbar, AppBar, Typogrphy, Typography } from \"@material-ui/core\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        padding: 25,\n        backgroundImage: \"linear-gradient(to bottom, #f7f2fc, #e9e0f1, #dacee7, #ccbcdc, #beaad1, #b69dcd, #ad91c9, #a584c5, #9f79c7, #996dc9, #9262cb, #8b56cd)\"\n    },\n    list: {\n        background: \"green\"\n    },\n    title: {\n        flexGrow: 1\n    }\n}));\n\nconst AppNavbar = () => {\n    const classes = useStyles();\n    return(\n        <div>\n        <AppBar className={classes.root}>\n            <Toolbar>\n                <Link to=\"/\"><Typography variant=\"h5\" className={classes.title}>\n                    Material Ui Example\n                </Typography></Link>\n                <MainNavigation></MainNavigation>\n            </Toolbar>\n        </AppBar>\n        </div>\n    );\n};\n\nexport default AppNavbar;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid, Button, Radio, RadioGroup, \n    FormControlLabel, FormControl, List, ListItem, ListItemAvatar, Avatar, ListItemText, FormLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"80%\"\n    },\n    input: {\n        marginBottom: \"1rem\"\n    },\n    footer: {\n        padding: \"2rem\"\n    }\n});\n\nconst Footer = () => {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar>\n                              \n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"github\" secondary=\"My github\" />\n                        \n                        </ListItem>\n                    </List>\n                </Grid>\n                <Grid item xs={6}>\n                    <form className={classes.form}>\n                        <FormControl className={classes.form}>\n                            <TextField className={classes.input} fullWidth label=\"Firstname\" />\n                            <TextField className={classes.input} fullWidth label=\"Lastname\" />\n                            <TextField className={classes.input} fullWidth label=\"Email\" type=\"email\" />\n                            <TextField className={classes.input} fullWidth label=\"Phone\" type=\"tel\" />\n                            <TextField className={classes.input} fullWidth variant=\"outlined\" label=\"Password\" type=\"password\" />\n                            <RadioGroup aria-label=\"gender\" name=\"gender1\">\n                                <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                                <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                                <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                            </RadioGroup>\n                            <FormLabel component=\"label\" ></FormLabel>\n                            <Button variant=\"outlined\" color=\"primary\">Sign up</Button>\n                        </FormControl>\n                    </form>\n                </Grid>\n            </Grid>\n        </footer>\n    )\n}\n\nexport default Footer;","export const posts = [\n    {\n        title: \"React\",\n        image: \"https://www.cloudcms.com/images/quickstarts/react/react.df70b005.png\",\n        id: 1,\n        text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n    },\n    {\n        title: \"Node\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Node.js_logo.svg/1200px-Node.js_logo.svg.png\",\n        id: 2,\n        text: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of de Finibus Bonorum et Malorum (The Extremes of Good and Evil) by Cicero, written in 45 BC.\"\n    },\n    {\n        title: \"SASS\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Sass_Logo_Color.svg/2000px-Sass_Logo_Color.svg.png\",\n        id: 3,\n        text: \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\"\n    },\n    {\n        title: \"MacBook Pro\",\n        image: \"https://static.bhphoto.com/images/images2000x2000/1559148656_1480943.jpg\",\n        id: 4,\n        text: \"lorem ipsum\"\n    },\n    {\n        title: \"MongoDB\",\n        image: \"https://miro.medium.com/max/3200/1*DiNIG4Bfpm65_wwXf_JwMA.png\",\n        id: 5,\n        text: \"The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from\"\n    }\n];\n","import React from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardMedia, Button, Typography, CardActions, Grid } from \"@material-ui/core\";\n\nimport { posts } from \"./postsData\";\n\nconst useStyles = makeStyles({\n    gridContainer: {\n        padding: \"3rem\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\"\n    },\n    gridItem: {\n        padding: \"1.2rem\",\n        borderRadius: \"2rem\"\n    },\n    cardMedia: {\n        height: \"35vh\"\n    }\n});\n\nconst Posts = ({ match }) => {\n    const classes = useStyles();\n    return (\n        <main>\n        <Grid container className={classes.gridContainer} spacing={3}>\n            {posts.map((post) => {\n                return(\n                    <Grid key={post.id} item xs={3} className={classes.gridItem}>\n                        <Card className={classes.gridItem}>\n                            <CardMedia image={post.image} component=\"img\" alt={post.title} height=\"250px\" />\n                            <CardContent>\n                                <Typography variant=\"h4\">\n                                    {post.title}\n                                </Typography>\n                                <Typography variant=\"caption\">\n                                    {post.text.substring(0, 30)}...\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button variant=\"outlined\" color=\"secondary\">Do something</Button>\n                                <Link to={`${match.url}${post.id}`}><Button variant=\"outlined\" color=\"primary\">View</Button></Link>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                )\n            })}\n        </Grid>\n        </main>\n    )\n}\n\nexport default withRouter(Posts);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid, Typography, Card, CardContent, CardMedia } from \"@material-ui/core\";\n\nconst Post = ({ match, data }) => {\n    const post = data.find(post => post.id == match.params.id); \n    return (\n        <main>\n            <Grid container>\n                <Grid item xs=\"8\">\n                    <Typography variant=\"h1\">\n                        {post.title}\n                    </Typography>\n                    <Card>\n                        <CardMedia>\n                            <img src={post.image} alt={post.title} />\n                        </CardMedia>\n                    </Card>\n                </Grid>\n            </Grid>\n        </main>\n    )\n};\n\nexport default Post;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nimport AppNavbar from \"./components/AppNavbar\";\nimport Footer from \"./components/Footer\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Post\";\n\nimport { posts } from \"./components/postsData\";\n\nconst App = () => {\n    \n    return (\n      <div className=\"App\">\n        <Router basename=\"/\">\n          <AppNavbar></AppNavbar>\n          <Switch>\n            <Route path=\"/\" exact component={Posts} />\n            <Route path={`/:id`} render={(props) => {return (<Post data={posts} {...props} />)}} />\n          </Switch>\n          <Footer></Footer>\n        </Router>\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}